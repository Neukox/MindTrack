import { PrismaClient } from '../generated/prisma';
import bcrypt from 'bcrypt';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± Iniciando o seed do banco de dados...');

  // Limpar dados existentes (opcional - comentar se n√£o quiser apagar)
  console.log('üßπ Limpando dados existentes...');
  await prisma.reflection.deleteMany();
  await prisma.dashboardMetrics.deleteMany();
  await prisma.passwordResetToken.deleteMany();
  await prisma.user.deleteMany();

  // Criar usu√°rios de exemplo
  console.log('üë• Criando usu√°rios...');

  const hashedPassword = await bcrypt.hash('123456', 10);

  const user1 = await prisma.user.create({
    data: {
      username: 'Jo√£o Silva',
      email: 'joao@exemplo.com',
      password: hashedPassword,
    },
  });

  const user2 = await prisma.user.create({
    data: {
      username: 'Maria Santos',
      email: 'maria@exemplo.com',
      password: hashedPassword,
    },
  });

  const user3 = await prisma.user.create({
    data: {
      username: 'Pedro Costa',
      email: 'pedro@exemplo.com',
      password: hashedPassword,
    },
  });

  console.log('‚úÖ Usu√°rios criados com sucesso!');

  // Criar reflex√µes de exemplo
  console.log('üìù Criando reflex√µes...');

  const reflexoesExemplo = [
    // Reflex√µes do Jo√£o
    {
      title: 'Primeira aula de algoritmos',
      category: 'ESTUDO' as const,
      emotion: 'MOTIVACAO' as const,
      content:
        'Hoje tive minha primeira aula de algoritmos. Foi muito interessante aprender sobre estruturas de dados b√°sicas. Estou empolgado para continuar estudando e praticar mais exerc√≠cios.',
      userId: user1.id,
    },
    {
      title: 'Desafio com recursividade',
      category: 'ESTUDO' as const,
      emotion: 'ANSIEDADE' as const,
      content:
        'Estou tendo dificuldades para entender recursividade. Preciso estudar mais exemplos e talvez pedir ajuda ao professor. √â frustrante n√£o conseguir resolver os exerc√≠cios na primeira tentativa.',
      userId: user1.id,
    },
    {
      title: 'Projeto em equipe',
      category: 'ESTUDO' as const,
      emotion: 'ALEGRIA' as const,
      content:
        'Come√ßamos um projeto em equipe para desenvolver um sistema web. Estou animado para trabalhar com meus colegas e aplicar os conhecimentos que aprendi at√© agora.',
      userId: user1.id,
    },
    {
      title: 'Exerc√≠cios f√≠sicos',
      category: 'PESSOAL' as const,
      emotion: 'CALMA' as const,
      content:
        'Voltei a fazer exerc√≠cios regularmente. Sinto que isso est√° me ajudando a manter o foco nos estudos e a ter mais energia durante o dia.',
      userId: user1.id,
    },
    {
      title: 'Entrevista de est√°gio',
      category: 'ESTAGIO' as const,
      emotion: 'ANSIEDADE' as const,
      content:
        'Tenho uma entrevista de est√°gio na pr√≥xima semana. Estou nervoso, mas tamb√©m empolgado. Preciso revisar os conceitos principais e preparar algumas perguntas sobre a empresa.',
      userId: user1.id,
    },

    // Reflex√µes da Maria
    {
      title: 'In√≠cio da pesquisa de TCC',
      category: 'PESQUISA' as const,
      emotion: 'MOTIVACAO' as const,
      content:
        'Comecei a pesquisar temas para meu TCC. Estou interessada em intelig√™ncia artificial aplicada √† educa√ß√£o. J√° encontrei alguns artigos interessantes que vou estudar mais profundamente.',
      userId: user2.id,
    },
    {
      title: 'Dificuldades com matem√°tica',
      category: 'ESTUDO' as const,
      emotion: 'TRISTEZA' as const,
      content:
        'Estou tendo muita dificuldade com c√°lculo diferencial. √Äs vezes me sinto burra por n√£o conseguir acompanhar a turma. Preciso buscar ajuda e n√£o desistir.',
      userId: user2.id,
      createdAt: new Date('2024-03-06T20:30:00.000Z'),
    },
    {
      title: 'Grupo de estudos',
      category: 'ESTUDO' as const,
      emotion: 'ALEGRIA' as const,
      content:
        'Formamos um grupo de estudos para matem√°tica. √â incr√≠vel como estudar em grupo me ajuda a entender melhor os conceitos. Todos se ajudam e o ambiente √© muito positivo.',
      userId: user2.id,
      createdAt: new Date('2024-03-08T15:45:00.000Z'),
    },
    {
      title: 'Primeira publica√ß√£o cient√≠fica',
      category: 'PESQUISA' as const,
      emotion: 'ALEGRIA' as const,
      content:
        'Meu artigo foi aceito em um congresso de inicia√ß√£o cient√≠fica! Estou muito feliz e orgulhosa. Todo o esfor√ßo valeu a pena. Agora preciso preparar a apresenta√ß√£o.',
      userId: user2.id,
      createdAt: new Date('2024-03-14T13:00:00.000Z'),
    },
    {
      title: 'Equilibrio vida-estudo',
      category: 'PESSOAL' as const,
      emotion: 'REFLEXAO' as const,
      content:
        'Tenho refletido sobre como equilibrar melhor minha vida pessoal com os estudos. √Äs vezes me dedico tanto √† faculdade que esque√ßo de cuidar de outros aspectos da minha vida.',
      userId: user2.id,
      createdAt: new Date('2024-03-16T18:30:00.000Z'),
    },

    // Reflex√µes do Pedro
    {
      title: 'Primeiro dia de est√°gio',
      category: 'ESTAGIO' as const,
      emotion: 'ANSIEDADE' as const,
      content:
        'Hoje foi meu primeiro dia de est√°gio na empresa de desenvolvimento. Estou nervoso, mas animado. A equipe parece muito acolhedora e j√° me deram algumas tarefas interessantes.',
      userId: user3.id,
      createdAt: new Date('2024-03-04T08:30:00.000Z'),
    },
    {
      title: 'Aprendendo React',
      category: 'ESTUDO' as const,
      emotion: 'MOTIVACAO' as const,
      content:
        'Comecei a estudar React para o projeto do est√°gio. √â uma biblioteca muito interessante e posso ver como √© poderosa para criar interfaces interativas. Estou animado para aprender mais.',
      userId: user3.id,
      createdAt: new Date('2024-03-07T19:45:00.000Z'),
    },
    {
      title: 'Feedback do supervisor',
      category: 'ESTAGIO' as const,
      emotion: 'ALEGRIA' as const,
      content:
        'Recebi um feedback muito positivo do meu supervisor no est√°gio. Ele disse que estou me desenvolvendo bem e que minhas contribui√ß√µes s√£o valiosas. Isso me motiva muito!',
      userId: user3.id,
      createdAt: new Date('2024-03-11T17:20:00.000Z'),
    },
    {
      title: 'Desafio t√©cnico',
      category: 'ESTAGIO' as const,
      emotion: 'REFLEXAO' as const,
      content:
        'Encontrei um bug complexo no sistema e passei o dia todo tentando resolv√™-lo. Foi frustrante, mas tamb√©m uma √≥tima oportunidade de aprendizado. Aprendi muito sobre debugging.',
      userId: user3.id,
      createdAt: new Date('2024-03-13T21:15:00.000Z'),
    },
    {
      title: 'Vida social na faculdade',
      category: 'PESSOAL' as const,
      emotion: 'CALMA' as const,
      content:
        'Participei de um evento da faculdade hoje. Foi legal conhecer pessoas de outros cursos e conversar sobre coisas diferentes dos estudos. √â importante ter momentos assim.',
      userId: user3.id,
      createdAt: new Date('2024-03-17T22:00:00.000Z'),
    },

    // Mais algumas reflex√µes recentes
    {
      title: 'Prepara√ß√£o para prova',
      category: 'ESTUDO' as const,
      emotion: 'ANSIEDADE' as const,
      content:
        'Tenho uma prova importante na pr√≥xima semana. Estou estudando bastante, mas ainda me sinto inseguro. Vou fazer mais exerc√≠cios e revisar as anota√ß√µes.',
      userId: user1.id,
      createdAt: new Date('2024-03-18T10:30:00.000Z'),
    },
    {
      title: 'Reuni√£o com orientador',
      category: 'PESQUISA' as const,
      emotion: 'MOTIVACAO' as const,
      content:
        'Tive uma reuni√£o produtiva com meu orientador. Ele aprovou minha proposta de pesquisa e me deu v√°rias sugest√µes de bibliografia. Estou empolgada para come√ßar os experimentos.',
      userId: user2.id,
      createdAt: new Date('2024-03-19T14:00:00.000Z'),
    },
    {
      title: 'Projeto pessoal',
      category: 'PESSOAL' as const,
      emotion: 'ALEGRIA' as const,
      content:
        'Comecei um projeto pessoal de desenvolvimento de um app mobile. √â gratificante aplicar os conhecimentos em algo que criei do zero. Espero conseguir terminar nas pr√≥ximas semanas.',
      userId: user3.id,
      createdAt: new Date('2024-03-20T16:45:00.000Z'),
    },
  ];

  // Inserir todas as reflex√µes
  for (const reflexao of reflexoesExemplo) {
    await prisma.reflection.create({
      data: reflexao,
    });
  }

  console.log('‚úÖ Reflex√µes criadas com sucesso!');

  // Criar m√©tricas do dashboard para cada usu√°rio
  console.log('üìä Criando m√©tricas do dashboard...');

  const semesterStart = new Date('2024-03-01T00:00:00.000Z');
  const currentWeek = Math.ceil(
    (Date.now() - semesterStart.getTime()) / (7 * 24 * 60 * 60 * 1000),
  );

  for (const user of [user1, user2, user3]) {
    const userReflections = await prisma.reflection.count({
      where: { userId: user.id },
    });

    const lastReflection = await prisma.reflection.findFirst({
      where: { userId: user.id },
      orderBy: { createdAt: 'desc' },
    });

    const thisWeekStart = new Date();
    thisWeekStart.setDate(thisWeekStart.getDate() - thisWeekStart.getDay());
    thisWeekStart.setHours(0, 0, 0, 0);

    const reflectionsThisWeek = await prisma.reflection.count({
      where: {
        userId: user.id,
        createdAt: {
          gte: thisWeekStart,
        },
      },
    });

    await prisma.dashboardMetrics.create({
      data: {
        userId: user.id,
        totalReflections: userReflections,
        currentWeek: currentWeek,
        reflectionsThisWeek: reflectionsThisWeek,
        lastReflectionAt: lastReflection?.createdAt,
        consecutiveDays: Math.floor(Math.random() * 7) + 1, // Valor aleat√≥rio para exemplo
        weekGrowth: Math.random() * 20 - 10, // Crescimento entre -10% e +10%
        semesterStart: semesterStart,
      },
    });
  }

  console.log('‚úÖ M√©tricas do dashboard criadas com sucesso!');

  // Estat√≠sticas finais
  const totalUsers = await prisma.user.count();
  const totalReflections = await prisma.reflection.count();
  const totalMetrics = await prisma.dashboardMetrics.count();

  console.log('\nüéâ Seed conclu√≠do com sucesso!');
  console.log(`üìä Estat√≠sticas:`);
  console.log(`   - Usu√°rios criados: ${totalUsers}`);
  console.log(`   - Reflex√µes criadas: ${totalReflections}`);
  console.log(`   - M√©tricas criadas: ${totalMetrics}`);
  console.log('\nüîê Dados de login para teste:');
  console.log('   Email: joao@exemplo.com | Senha: 123456');
  console.log('   Email: maria@exemplo.com | Senha: 123456');
  console.log('   Email: pedro@exemplo.com | Senha: 123456');
}

main()
  .then(async () => {
    await prisma.$disconnect();
  })
  .catch(async (e) => {
    console.error('‚ùå Erro durante o seed:', e);
    await prisma.$disconnect();
    process.exit(1);
  });
