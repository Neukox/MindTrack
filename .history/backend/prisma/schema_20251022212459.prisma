// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Category {
  ESTUDO
  PESSOAL
  ESTAGIO
  PESQUISA
}

enum Emotion {
  ALEGRIA
  CALMA
  ANSIEDADE
  REFLEXAO
  MOTIVACAO
  TRISTEZA
}

model User {
  id               String                @id @default(cuid())
  username         String
  email            String                @unique
  password         String
  createdAt        DateTime              @default(now())
  updatedAt        DateTime              @updatedAt
  passwordReset    PasswordResetToken[]
  reflections      Reflection[]          // Relacionamento 1:N com Reflexões
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime
  userId    String

  User      User     @relation(fields: [userId], references: [id])
}

model Reflection {
  id          String     @id @default(cuid())
  title       String
  category    Category
  emotion     Emotion
  content     String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  // Relacionamento com o usuário que criou a reflexão
  userId      String
  user        User        @relation(fields: [userId], references: [id])
}

model DashboardMetrics {
  id              String    @id @default(cuid())
  userId          String
  totalReflections Int       @default(0)    // Total de registros no semestre
  currentWeek     Int                        // Semana atual (número)
  reflectionsThisWeek Int     @default(0)    // Quantidade de reflexões nesta semana
  lastReflectionAt DateTime?                 // Data/hora da última entrada
  consecutiveDays Int       @default(0)      // Dias consecutivos com registros
  weekGrowth      Float?                     // Crescimento percentual em relação à semana anterior
  semesterStart   DateTime                   // Início do semestre (referência)
  updatedAt       DateTime  @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
}

